apply plugin: 'android-library'
apply plugin: 'maven'
apply plugin: 'signing'

android {
    compileSdkVersion 17
    buildToolsVersion "19.0.3"

    defaultConfig {
        minSdkVersion 17
        targetSdkVersion 17
        versionCode 1
        versionName "0.1.0"
    }

    buildTypes {
        release {
            runProguard false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.txt'
        }
    }
}

dependencies {}

// Required for AAR publishing
configurations {
    archives {
        extendsFrom configurations.default
    }
}

// Upload AAR according to
uploadArchives {
    configuration = configurations.archives
    repositories.mavenDeployer {
        beforeDeployment { MavenDeployment deployment -> signing.signPom(deployment) }

        repository(url: sonatypeStaging) {
            authentication(
                userName: sonatypeUsername,
                password: sonatypePassword
            )
        }
        snapshotRepository(url: sonatypeSnapshot) {
            authentication(
                userName: sonatypeUsername,
                password: sonatypePassword
            )
        }

        pom.groupId = GROUP
        pom.artifactId = POM_ARTIFACT_ID
        pom.version = VERSION_NAME

        pom.project {
            name POM_NAME
            packaging POM_PACKAGING
            description POM_DESCRIPTION
            url POM_URL

            scm {
                url POM_SCM_URL
                connection POM_SCM_CONNECTION
                developerConnection POM_SCM_DEV_CONNECTION
            }

            licenses {
                license {
                    name POM_LICENSE_NAME
                    url POM_LICENSE_URL
                    distribution POM_LICENSE_DIST
                }
            }

            developers {
                developer {
                    id POM_DEVELOPER_ID
                    name POM_DEVELOPER_NAME
                }
            }
        }
    }
}

// Signing
signing {
    required { has("release") && gradle.taskGraph.hasTask("uploadArchives") }
    sign configurations.archives
}

// Javadocs and sources
task androidJavadocs(type: Javadoc) {
    source = android.sourceSets.main.allJava
}

task androidJavadocsJar(type: Jar, dependsOn: androidJavadocs) {
    classifier = 'javadoc'
    from androidJavadocs.destinationDir
}

task androidSourcesJar(type: Jar) {
    classifier = 'sources'
    from android.sourceSets.main.allSource
}

artifacts {
    archives androidSourcesJar
    archives androidJavadocsJar
}
